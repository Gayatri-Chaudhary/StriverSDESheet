// DAY 1 Merge Two Sorted Lists
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode head = new ListNode(-1);
        ListNode tail = head;
        if(list1 == null){
            return list2;
        }
        if(list2 == null){
            return list1;
        }

        while(list1 != null && list2 != null){
            if(list1.val < list2.val){
                tail.next = new ListNode(list1.val);
                list1=list1.next;
            }
            else{
                tail.next = new ListNode(list2.val);
                list2=list2.next;
            }
            tail=tail.next;
        }
        if(list1 != null){
            tail.next=list1;;
        }
        if(list2 != null){
            tail.next=list2;
        }
        return head.next;
    }
}

Time Complexity :O(n+m    n=size of list1 and m=size of list2
Space Complexity:O(n+m)


